/**
 * This file was generated by the JPA Modeler
 */
package com.example.demo.model;

import lombok.Getter;
import lombok.Setter;
import org.hibernate.annotations.GenericGenerator;
import org.springframework.transaction.annotation.Transactional;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import java.io.Serializable;
import java.util.List;

/**
 * @author dzni0816
 */
@Entity
@Getter
@Setter
@Transactional
public class Customer implements Serializable {

    @Id
    @GeneratedValue(generator = "UUID")
    @GenericGenerator(
            name = "UUID",
            strategy = "org.hibernate.id.UUIDGenerator"
    )
    private String id;

    @Basic
    private String firstName;

    @Basic
    private String lastName;

    @Basic
    private String contact;

    @Basic
    private String email;

    @Basic
    private String phone;

    @Basic
    private String userId;

    @Basic
    private String username;

    @Basic
    private String passNumber;

    @Basic
    private String countNumber;

    @Basic
    private String location;

    @ManyToOne(targetEntity = Address.class)
    private Address address1;

    @OneToMany(targetEntity = Location.class, mappedBy = "customer", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    private List<Location> locations;

    @OneToMany(targetEntity = RelatedLocation.class, mappedBy = "customer", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    private List<RelatedLocation> relatedLocations;

    @OneToMany(targetEntity = Statisticscollector.class, mappedBy = "customer", cascade = CascadeType.REMOVE)
    private List<Statisticscollector> statisticscollectors;

    @OneToMany(targetEntity = So.class, mappedBy = "customer", cascade = CascadeType.REMOVE)
    private List<So> soes;

}
