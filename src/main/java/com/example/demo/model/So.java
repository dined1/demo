/**
 * This file was generated by the JPA Modeler
 */
package com.example.demo.model;

import lombok.Getter;
import lombok.Setter;
import org.hibernate.annotations.GenericGenerator;
import org.springframework.transaction.annotation.Transactional;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.List;

/**
 * @author dzni0816
 */
@Entity
@Getter
@Setter
@Transactional
public class So implements Serializable {

    @Id
    @GeneratedValue(generator = "UUID")
    @GenericGenerator(
            name = "UUID",
            strategy = "org.hibernate.id.UUIDGenerator"
    )
    private String id;

    @Basic
    private String dateCreated;

    @Basic
    private String orderDate;

    @Basic
    private String status;

    @Basic
    private String SONumber;

    @Basic
    private String purchaseOrderNumber;

    @Basic
    private String dateModified;

    @Basic
    private BigDecimal finalMP;

    @Basic
    private BigDecimal finalOTP;

    @Basic
    private BigDecimal finalMPwithTaxAndDiscount;

    @Basic
    private BigDecimal finalOTPwithTaxAndDiscount;

    @Basic
    private String distributionChannel;

    @Basic
    private String attentionFlag;

    @ManyToOne(targetEntity = Customer.class)
    private Customer customer;

    @OneToMany(targetEntity = Payment.class, mappedBy = "so")
    private List<Payment> payments;

    @OneToMany(targetEntity = Soproduct.class, mappedBy = "so", cascade = CascadeType.REMOVE)
    private List<Soproduct> soproducts;

    @ManyToOne(targetEntity = Location.class)
    private Location location;
}
